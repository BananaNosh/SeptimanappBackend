  openapi: "3.0.0"
  info:
    description: HTTP server for the Septimana Latina Backend

    title: septimanapp-backend-http

    version: 0.1.0


  paths:
    /events/{id}:
      get:
        parameters:
          - name: id
            schema:
              type: integer
            in: path
            required: true
        responses:
          200:
            description: "Returns the event with the given id"
            content:
              application/json:
                schema:
                  $ref: "./types.yaml#/components/schemas/event"
    /events:
      get:
        parameters:
          - name: year
            description: "if given only events of this year are returned"
            in: query
            schema:
              type: integer
              minimum: 2018
              maximum: 2020
              example: 2019
        responses:
          200:
            description: 'returns the events of the septimana for all or a specific year'
            content:
              application/json:
                schema:
                  $ref: "./types.yaml#/components/schemas/events"

      post:
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "./types.yaml#/components/schemas/event"
        responses:
          200:
            description: "Saves the posted events"
            content:
              application/json:
                schema:
                  $ref: "./types.yaml#/components/schemas/events"

    /locations/{id}:
      get:
        parameters:
          - name: id
            schema:
              type: string
            in: path
            required: true
        responses:
          200:
            description: "Returns the location with the given id"
            content:
              application/json:
                schema:
                  $ref: "./types.yaml#/components/schemas/location"
    /locations:
      get:
        responses:
          200:
            description: "Returns all locations"
            content:
              application/json:
                schema:
                  $ref: "./types.yaml#/components/schemas/locations"


#    /hostname:
#      get:
#        summary: 'returns the hostname'
#        description: 'returns the hostname of the machine'
#        operationId: 'getHostname'
#        responses:
#          200:
#            description: 'returns the hostname of the machine'
#            content:
#              text/plain:
#                schema:
#                  type: string
#
#    /hello/{user}:
#      get:
#        operationId: 'hello'
#
#        description: Returns a greeting to the user!
#
#        parameters:
#
#          - name: user
#
#            in: path
#
#            schema:
#              type: string
#
#            required: true
#
#            description: The name of the user to greet.
#
#        responses:
#          200:
#            description: Returns the greeting.
#            content:
#              text/plain:
#                schema:
#                  type: string
#
#          400:
#
#            description: Invalid characters in "user" were provided.
