openapi: "3.0.0"
info:
  description: HTTP server for the Septimana Latina Backend

  title: septimanapp-backend-http

  version: 0.2.0



paths:
  /events/{id}:
    get:
      parameters:
        - name: id
          schema:
            type: integer
          in: path
          required: true
      responses:
        200:
          description: "Returns the event with the given id"
          content:
            application/json:
              schema:
                $ref: "./types.yaml#/components/schemas/event"
  /events:
    get:
      parameters:
        - name: year
          description: "if given only events of this year are returned"
          in: query
          schema:
            type: integer
            minimum: 2020
            maximum: 2021
            example: 2020
      responses:
        200:
          description: 'returns the events of the septimana for all or a specific year'
          content:
            application/json:
              schema:
                $ref: "./types.yaml#/components/schemas/events"

    post:
      security:
        - app_id: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./types.yaml#/components/schemas/events"
      responses:
        200:
          description: "Saves the posted events"
          content:
            text/plain:
              schema:
                type: string
                example: "OK"

  /locations/{id}:
    get:
      parameters:
        - name: id
          schema:
            type: string
          in: path
          required: true
      responses:
        200:
          description: "Returns the location with the given id"
          content:
            application/json:
              schema:
                $ref: "./types.yaml#/components/schemas/location"
  /locations:
    parameters:
      - name: overallLocation
        description: "if given only locations of this overallLocation are returned"
        in: query
        schema:
          $ref: "./types.yaml#/components/schemas/overallLocation"
    get:
      responses:
        200:
          description: "Returns all locations"
          content:
            application/json:
              schema:
                $ref: "./types.yaml#/components/schemas/locations"


components:
  securitySchemes:
    app_id:
      type: apiKey
      description: API key to authorize requests.
      name: appid
      in: query


#    /hostname:
#      get:
#        summary: 'returns the hostname'
#        description: 'returns the hostname of the machine'
#        operationId: 'getHostname'
#        responses:
#          200:
#            description: 'returns the hostname of the machine'
#            content:
#              text/plain:
#                schema:
#                  type: string
#
#    /hello/{user}:
#      get:
#        operationId: 'hello'
#
#        description: Returns a greeting to the user!
#
#        parameters:
#
#          - name: user
#
#            in: path
#
#            schema:
#              type: string
#
#            required: true
#
#            description: The name of the user to greet.
#
#        responses:
#          200:
#            description: Returns the greeting.
#            content:
#              text/plain:
#                schema:
#                  type: string
#
#          400:
#
#            description: Invalid characters in "user" were provided.
